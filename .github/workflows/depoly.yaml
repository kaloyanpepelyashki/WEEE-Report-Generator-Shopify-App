name: "Deploy"

on:
  push:
    branches:
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20" # Use Node.js 20

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Copy application files to Hetzner server
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" scp -r -o StrictHostKeyChecking=no ./* ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/srv/weee-calculator-shopify-app

      #Sets up an exact copy of the local env file on the server
      - name: Set up env file on the server
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          echo "SHOPIFY_API_KEY=${{ secrets.CLIENT_ENV_SHOPIFY_API_KEY }}" > /srv/weee-calculator-shopify-app/.env
          echo "SHOPIFY_API_SECRET=${{ secrets.CLIENT_ENV_SHOPIFY_API_SECRET }}" >> /srv/weee-calculator-shopify-app/.env
          echo "SCOPES=${{ secrets.CLIENT_ENV_SCOPES }}" >> /srv/weee-calculator-shopify-app/.env
          echo "SHOPIFY_APP_URL=${{ secrets.CLIENT_ENV_SHOPIFY_APP_URL }}" >> /srv/weee-calculator-shopify-app/.env
          echo "NODE_ENV=${{ secrets.CLIENT_ENV_NODE_ENV }}" >> /srv/weee-calculator-shopify-app/.env
          echo "API_URL=${{ secrets.CLIENT_ENV_API_URL }}" >> /srv/weee-calculator-shopify-app/.env
          EOF

      - name: SSH into server, install dependencies and build app
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          cd /srv/weee-calculator-shopify-app
          npm install
          npm run build 
          npm run setup
          shopify app deploy
          pm2 restart "weee-calculator-shopify-app" || pm2 start npm --name "weee-calculator-shopify-app" -- start
          pm2 save
          EOF
